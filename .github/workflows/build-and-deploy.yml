name: CI

on:
  push:
    branches-ignore: ['main']
  workflow_dispatch:

jobs:
  deploy_dev:
    environment: dev
    runs-on: ubuntu-latest

    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Checkout configs
      uses: actions/checkout@v4
      with:
        repository: '${{ vars.CLIENT_CONFIGS_REPOSITORY }}'
        path: './clientconfigs'
        ref: 'main'
        token: '${{ secrets.CLIENT_CONFIGS_TOKEN }}'
        persist-credentials: 'false'
        sparse-checkout: 'clientconfigs'

    - name: Check configs
      run: |
        ls ./
        ls ./clientconfigs/

    - name: Build Docker Image
      run: |
        docker build -t laa-sds-api .

    - name: Assume AWS Role
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.DEV_ECR_ROLE_TO_ASSUME }}
        aws-region: ${{ vars.DEV_ECR_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr-dev
      uses: aws-actions/amazon-ecr-login@v2

    - name: Store ECR endpoint as output
      id: ecr-url-output
      run: echo "::set-output name=ecr_url::${{ steps.login-ecr-dev.outputs.registry }}/${{ vars.DEV_ECR_REPOSITORY }}"

    - name: Push to ECR
      id: ecr
      env:
        ECR_URL: ${{ steps.ecr-url-output.outputs.ecr_url }}
      run: |
        docker tag laa-sds-api $ECR_URL:${{ github.sha }}
        docker tag laa-sds-api $ECR_URL:dev.latest
        docker push $ECR_URL:${{ github.sha }}
        docker push $ECR_URL:dev.latest

    - name: Deploy DEV
      uses: ./.github/actions/deploy
      with:
        ecr-url: ${{ steps.ecr-url-output.outputs.ecr_url }}
        kube-cert: ${{ secrets.DEV_KUBE_CERT }}
        kube-token: ${{ secrets.DEV_KUBE_TOKEN }}
        kube-cluster: ${{ secrets.DEV_KUBE_CLUSTER }}
        kube-namespace: ${{ secrets.DEV_KUBE_NAMESPACE }}
        irsa-sa-environment: 'development'
        bucket-secret-ref: 'laa-sds-s3-bucket-output'
        tenant_id: ${{secrets.DEV_TENANT_ID}}
        audience: ${{secrets.DEV_AUDIENCE}}
        sentry_dsn: ${{secrets.DEV_SENTRY_DSN}}
        casbin_policy: ${{vars.CASBIN_POLICY}}
        casbin_model: ${{vars.CASBIN_MODEL}}

