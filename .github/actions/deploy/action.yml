name: Deploy
description: Deploy built docker image to a kubernetes namespace
inputs:
  ecr-url:
    description: ECR endpoint url
    required: true
  kube-cert:
    description: Kubernetes service account ca.crt
    required: true
  kube-token:
    description: Kubernetes service account token
    required: true
  kube-cluster:
    description: Kubernetes service account cluster
    required: true
  kube-namespace:
    description: Kubernetes cluster namespace
    required: true
  irsa-sa-environment:
    description: Environment
    required: true
  audience:
    description: azure authentication application id
    required: true
  tenant_id:
    description: azure tenant id where application is registered
    required: true
  casbin_policy:
    description: casbin policy for auth
    required: true
  casbin_model:
    description: casbin model for auth
    required: true
  sentry_dsn:
    description: Sentry data source name destination for events
    required: true


runs:
  using: "composite"
  steps:
    - name: Authenticate to the cluster
      env:
        KUBE_CERT: ${{ inputs.kube-cert }}
        KUBE_TOKEN: ${{ inputs.kube-token }}
        KUBE_CLUSTER: ${{ inputs.kube-cluster }}
        KUBE_NAMESPACE: ${{ inputs.kube-namespace }}
      shell: bash
      run: |
        echo "${KUBE_CERT}" > ca.crt
        kubectl config set-cluster ${KUBE_CLUSTER} --certificate-authority=./ca.crt --server=https://${KUBE_CLUSTER}
        kubectl config set-credentials deploy-user --token=${KUBE_TOKEN}
        kubectl config set-context ${KUBE_CLUSTER} --cluster=${KUBE_CLUSTER} --user=deploy-user --namespace=${KUBE_NAMESPACE}
        kubectl config use-context ${KUBE_CLUSTER}

    - name: Update deployment image
      env:
        ECR_URL: ${{ inputs.ecr-url }}
        IMAGE_TAG: ${{ github.sha }}
        KUBE_NAMESPACE: ${{ inputs.kube-namespace }}
        ENVIRONMENT: ${{ inputs.irsa-sa-environment }}
        AUDIENCE: ${{ inputs.audience }}
        TENANT_ID: ${{ inputs.tenant_id }}
        SENTRY_DSN: ${{ inputs.sentry_dsn }}
        CASBIN_POLICY: ${{ inputs.casbin_policy }}
        CASBIN_MODEL: ${{ inputs.casbin_model }}



      shell: bash
      run: |
        mkdir -p deployments/kubernetes/envsubst
        for f in deployments/kubernetes/*.yml; do 
          envsubst < "$f" > "deployments/kubernetes/envsubst/${f##*/}"
        done


    - name: Apply manifest files
      env:
        KUBE_NAMESPACE: ${{ inputs.kube-namespace }}
      shell: bash
      run:  kubectl -n ${KUBE_NAMESPACE} apply -f deployments/kubernetes/envsubst/
